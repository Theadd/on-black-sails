<!DOCTYPE html>
<html>
  <head>
    <title><%- title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `link` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' boilerplate asset management.

        By default, tylesheets from your `assets/linker/styles` folder are included
        here automatically.  Both CSS (.css) and LESS (.less) are supported.
        In production, your styles will be minified and concatenated into a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/dashboard/dashboard.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->

    <!--Added this so the client has access to the csrf tag and it's grabbed first service side on every page -->
    <link href='http://fonts.googleapis.com/css?family=Shojumaru' rel='stylesheet' type='text/css'>
    <script type="text/javascript">
      window.overlord = { csrf: "<%= _csrf %>" };
    </script>

    <!-- The sound file tht will play on activity events -->
    <audio id="chatAudio">
      <source src="/sounds/notify.ogg" type="audio/ogg">
      <source src="/sounds/notify.mp3" type="audio/mpeg">
      <source src="/sounds/notify.wav" type="audio/wav">
    </audio>

  </head>

  <body>
    <div class="layout-container">
        <section id="header" class="layout-content">
            <div class="row">
                <div class="col-md-4">
                    <div class="logo">
                        <img src="images/logo.png" />
                        <h1 class="headline">ON BLACK SAILS!</h1>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="pull-right">
                        <form class="navbar-form navbar-right" action="/session/create">
                            <div class="form-group">
                                <input type="text" placeholder="Email" name="email" class="form-control">
                            </div>
                            <div class="form-group">
                                <input type="password" placeholder="Password" name="password" class="form-control">
                            </div>
                            <button type="submit" class="btn btn-success">Sign in</button>
                            <input type="hidden" name="_csrf" value="<%= _csrf %>" />
                        </form>
                    </div>
                </div>
            </div>
        </section>


        <%- body %>

        <div class="container">
          <hr>
          <footer class="footer pull-right">
            <div>
              <a href="http://sailsjs.com/">sails.js</a>
              <div>tutorial by irl nathan, with a bunch of help from cody, gabe, heather, mike, scott and zoli</div>
            </div>
          </footer>
        </div>

    </div>

    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/jquery.js"></script>
    <script src="/js/dependencies/bootstrap.js"></script>
    <script src="/js/dependencies/jquery.validate.min.js"></script>
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/underscore.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/customValidate.js"></script>
    <script src="/js/dashboard.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
